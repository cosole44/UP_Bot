from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
import os
from db import get_all_users, get_user_name
from utils.report import get_user_report
from datetime import datetime, timedelta
from dotenv import load_dotenv

load_dotenv()

ADMIN_IDS = [int(x) for x in os.getenv("ADMIN_IDS").split(",")]

router = Router()

# –®–∞–≥ 1: –≤—ã–±–æ—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
@router.message(F.text.lower() == "–æ—Ç—á—ë—Ç –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É")
async def show_user_list(message):
    await message.delete()
    if message.from_user.id not in ADMIN_IDS:
        await message.answer("‚õî –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤.")
        return

    users = get_all_users()
    buttons = [
        [InlineKeyboardButton(text=u[2], callback_data=f"admin_user_{u[0]}")]
        for u in users
    ]
    kb = InlineKeyboardMarkup(inline_keyboard=buttons)
    await message.answer("üë§ –í—ã–±–µ—Ä–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞:", reply_markup=kb)

# –®–∞–≥ 2: –≤—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞
@router.callback_query(F.data.startswith("admin_user_"))
async def choose_period(callback: CallbackQuery):
    user_id = callback.data.replace("admin_user_", "")
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üìÖ –°–µ–≥–æ–¥–Ω—è", callback_data=f"adminrep_{user_id}_today"),
            InlineKeyboardButton(text="üóìÔ∏è –ù–µ–¥–µ–ª—è", callback_data=f"adminrep_{user_id}_week"),
            InlineKeyboardButton(text="üìÜ –ú–µ—Å—è—Ü", callback_data=f"adminrep_{user_id}_month")
        ]
    ])
    full_name = get_user_name(int(user_id))
    await callback.message.edit_text(f"üìä –ü–µ—Ä–∏–æ–¥ –æ—Ç—á—ë—Ç–∞ –¥–ª—è {full_name}:", reply_markup=kb)

# –®–∞–≥ 3: –ø–æ–∫–∞–∑ –æ—Ç—á—ë—Ç–∞
@router.callback_query(F.data.startswith("adminrep_"))
async def show_user_report(callback: CallbackQuery):
    parts = callback.data.split("_")  # adminrep_<user_id>_<period>
    user_id = int(parts[1])
    period = parts[2]

    today = datetime.now().date()
    if period == "today":
        start, end = today, today
    elif period == "week":
        start = today - timedelta(days=6)
        end = today
    elif period == "month":
        start = today.replace(day=1)
        end = today
    else:
        await callback.answer("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥")
        return

    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á—ë—Ç
    report = get_user_report(user_id, str(start), str(end))
    full_name = get_user_name(user_id)
    await callback.message.edit_text(f"üìÑ –û—Ç—á—ë—Ç –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É {full_name}:\n\n{report}")
